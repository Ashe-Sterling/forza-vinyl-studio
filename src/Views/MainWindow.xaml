<Window
    x:Class="ForzaVinylStudio.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:ForzaVinylStudio.Views.Controls"
    xmlns:converters="clr-namespace:ForzaVinylStudio.Views.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ForzaVinylStudio"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:tools="clr-namespace:ForzaVinylStudio.ViewModels.Tools"
    xmlns:viewmodels="clr-namespace:ForzaVinylStudio.ViewModels"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    Title="Forza Vinyl Studio"
    Width="1366"
    Height="768"
    d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
    ResizeMode="CanResizeWithGrip"
    mc:Ignorable="d">
    <Window.Resources>
        <Style TargetType="{x:Type GridSplitter}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
        <converters:NullVisibilityConverter x:Key="NullToVisibilityConverter" />
    </Window.Resources>

    <!--  Keybindings  -->

    <Window.InputBindings>
        <KeyBinding
            Key="N"
            Command="{Binding NewVinylGroupCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="O"
            Command="{Binding OpenVinylGroupCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="S"
            Command="{Binding SaveVinylGroupCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="E"
            Command="{Binding ExportVinylGroupCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="W"
            Command="{Binding CloseVinylGroupCommand}"
            CommandParameter="{Binding CurrentVinylGroup}"
            Modifiers="Control" />
    </Window.InputBindings>

    <!--  Menu bar  -->

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem
                    Command="{Binding NewVinylGroupCommand}"
                    Header="_New"
                    InputGestureText="Ctrl+N" />
                <MenuItem
                    Command="{Binding OpenVinylGroupCommand}"
                    Header="_Open"
                    InputGestureText="Ctrl+O" />
                <Separator />
                <MenuItem
                    Command="{Binding SaveVinylGroupCommand}"
                    Header="_Save"
                    InputGestureText="Ctrl+S" />
                <MenuItem Command="{Binding SaveVinylGroupAsCommand}" Header="Save _As" />
                <MenuItem
                    Command="{Binding ExportVinylGroupCommand}"
                    Header="_Export"
                    InputGestureText="Ctrl+E" />
                <Separator />
                <MenuItem
                    Command="{Binding CloseVinylGroupCommand}"
                    CommandParameter="{Binding CurrentVinylGroup}"
                    Header="_Close"
                    InputGestureText="Ctrl+W" />
                <MenuItem
                    Command="{Binding ExitCommand}"
                    Header="E_xit"
                    InputGestureText="Alt+F4" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Duplicate" InputGestureText="Ctrl+D" />
            </MenuItem>
            <MenuItem Header="_Select">
                <MenuItem Header="Select _All" />
                <Separator />
            </MenuItem>
            <MenuItem Header="_Other">
                <MenuItem Header="_Settings" />
                <Separator />
                <MenuItem Header="Debug">
                    <MenuItem
                        Header="Draw Shape Vertices"
                        IsCheckable="True"
                        IsChecked="{Binding Source={x:Static local:App.Settings}, Path=DrawShapeVertices}" />
                    <MenuItem
                        Header="Draw Debug Strings"
                        IsCheckable="True"
                        IsChecked="{Binding Source={x:Static local:App.Settings}, Path=DrawDebugStrings}" />
                    <MenuItem
                        Header="Draw Hit Test Surface"
                        IsCheckable="True"
                        IsChecked="{Binding Source={x:Static local:App.Settings}, Path=DrawHitTestSurface}" />
                    <MenuItem Command="{Binding DumpVinylsCommand}" Header="Dump Vinyls" />
                </MenuItem>
            </MenuItem>
        </Menu>

        <!--  Main grid  -->

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition />
                <RowDefinition Height="20" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30" />
                <ColumnDefinition />
                <ColumnDefinition Width="80" />
            </Grid.ColumnDefinitions>

            <!--  Top toolbar  -->
            <StackPanel
                Grid.ColumnSpan="4"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Fill" Value="Gray" />
                        <Setter Property="Width" Value="1" />
                        <Setter Property="Margin" Value="5,0" />
                    </Style>

                    <!--  Tool settings  -->
                    <DataTemplate DataType="{x:Type tools:ColorPickerToolViewModel}">
                        <CheckBox Content="Pick color from shape" IsChecked="{Binding PickColorFromShape}" />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type tools:SelectToolViewModel}">
                        <StackPanel Orientation="Horizontal" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.CurrentVinylGroup.SelectedShape, Converter={StaticResource NullToVisibilityConverter}}">
                            <StackPanel.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Margin" Value="5,0" />
                                </Style>
                                <Style TargetType="{x:Type xctk:DoubleUpDown}">
                                    <Setter Property="Width" Value="65" />
                                    <Setter Property="FormatString" Value="F2" />
                                    <Setter Property="AllowSpin" Value="True" />
                                    <Setter Property="MouseWheelActiveTrigger" Value="MouseOver" />
                                    <EventSetter Event="ValueChanged" Handler="OnShapePropertyChanged" />
                                </Style>
                            </StackPanel.Resources>
                            <TextBlock Text="Position (X/Y)" />
                            <xctk:DoubleUpDown
                                Maximum="10000"
                                Minimum="-10000"
                                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.CurrentVinylGroup.SelectedShape.X, FallbackValue=0}" />
                            <xctk:DoubleUpDown
                                Maximum="10000"
                                Minimum="-10000"
                                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.CurrentVinylGroup.SelectedShape.Y, FallbackValue=0}" />
                            <TextBlock Text="Scale (X/Y)" />
                            <xctk:DoubleUpDown
                                Increment=".01"
                                Maximum="10"
                                Minimum="-10"
                                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.CurrentVinylGroup.SelectedShape.ScaleX, FallbackValue=0}" />
                            <xctk:DoubleUpDown
                                Increment=".01"
                                Maximum="10"
                                Minimum="-10"
                                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.CurrentVinylGroup.SelectedShape.ScaleY, FallbackValue=0}" />
                            <TextBlock Text="Skew" />
                            <xctk:DoubleUpDown
                                Increment=".01"
                                Maximum="10"
                                Minimum="-10"
                                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.CurrentVinylGroup.SelectedShape.Skew, FallbackValue=0}" />
                            <TextBlock Text="Angle" />
                            <xctk:DoubleUpDown
                                Maximum="0"
                                Minimum="-360"
                                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.CurrentVinylGroup.SelectedShape.Angle, FallbackValue=0}" />
                        </StackPanel>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type tools:ShapeToolViewModel}">
                        <Button
                            Width="24"
                            Height="24"
                            Command="{Binding OpenPopupCommand}">
                            <StackPanel>
                                <Image Source="{Binding SelectedVinyl.ImageSource}" Stretch="Fill" />

                                <Popup IsOpen="{Binding PopupOpen}" StaysOpen="False">
                                    <ScrollViewer>
                                        <ItemsControl ItemsSource="{Binding Vinyls}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <UniformGrid Columns="20" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Button
                                                        Width="48"
                                                        Height="48"
                                                        Background="DarkGray"
                                                        BorderThickness="0"
                                                        Command="{Binding DataContext.ClickedVinylCommand, RelativeSource={RelativeSource AncestorType=Button}}"
                                                        CommandParameter="{Binding}"
                                                        Cursor="Hand">
                                                        <Image Source="{Binding ImageSource}" />
                                                    </Button>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ScrollViewer>
                                </Popup>
                            </StackPanel>
                        </Button>
                    </DataTemplate>
                </StackPanel.Resources>

                <!--  Icon buttons  -->
                <controls:FlatIconButton
                    Command="{Binding NewVinylGroupCommand}"
                    SmallImageSource="../Resources/Icons/document.png"
                    ToolTip="New" />
                <controls:FlatIconButton
                    Command="{Binding OpenVinylGroupCommand}"
                    SmallImageSource="../Resources/Icons/folder-open-document.png"
                    ToolTip="Open" />
                <controls:FlatIconButton
                    Command="{Binding SaveVinylGroupCommand}"
                    SmallImageSource="../Resources/Icons/disk.png"
                    ToolTip="Save" />
                <Rectangle />
                <controls:FlatIconButton SmallImageSource="../Resources/Icons/scissors-blue.png" ToolTip="Cut" />
                <controls:FlatIconButton SmallImageSource="../Resources/Icons/notebooks.png" ToolTip="Copy" />
                <controls:FlatIconButton SmallImageSource="../Resources/Icons/clipboard-paste-document-text.png" ToolTip="Paste" />
                <Rectangle />
                <controls:FlatIconButton SmallImageSource="../Resources/Icons/arrow-return-180-left.png" ToolTip="Undo" />
                <controls:FlatIconButton SmallImageSource="../Resources/Icons/arrow-return.png" ToolTip="Redo" />
                <Rectangle />
                <ContentControl Content="{Binding CurrentTool.ViewModel}" />
            </StackPanel>

            <!--  Tools  -->
            <StackPanel Grid.Row="1" Grid.Column="0">
                <Separator />
                <ItemsControl ItemsSource="{Binding Tools}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <controls:ToolButton
                                    IsChecked="{Binding Selected}"
                                    SmallImageSource="{Binding Icon}"
                                    ToolTip="{Binding Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>

            <!--  Viewport  -->
            <Grid Grid.Row="1" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TabControl ItemsSource="{Binding VinylGroups}" SelectedItem="{Binding CurrentVinylGroup}">
                    <TabControl.ContentTemplate>
                        <!--  No content for our tab control, having multiple canvases will be a nightmare  -->
                        <DataTemplate />
                    </TabControl.ContentTemplate>
                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <DockPanel Margin="0,0,0,-3">
                                <TextBlock Text="{Binding Name}" />
                                <controls:FlatIconButton
                                    Margin="5,0,-5,0"
                                    Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.CloseVinylGroupCommand}"
                                    CommandParameter="{Binding}"
                                    SmallImageSource="../Resources/Icons/cross.png" />
                            </DockPanel>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                </TabControl>

                <controls:VinylCanvasControl
                    x:Name="VinylCanvasControl"
                    Grid.Row="1"
                    Margin="0,-5,0,0"
                    Cursor="{Binding CurrentTool.Cursor}" />
            </Grid>

            <!--  Shapes list  -->
            <Grid Grid.Row="1" Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Text="{Binding CurrentVinylGroup.Shapes.Count, StringFormat={}{0}/3000}" />

                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <controls:FlatIconButton
                            Command="{Binding MoveUpCommand}"
                            SmallImageSource="../Resources/Icons/arrow-090.png"
                            ToolTip="Move Up" />
                        <controls:FlatIconButton
                            Command="{Binding MoveDownCommand}"
                            SmallImageSource="../Resources/Icons/arrow-270.png"
                            ToolTip="Move Down" />
                    </StackPanel>
                </Grid>

                <ListBox
                    Grid.Row="1"
                    ItemsSource="{Binding CurrentVinylGroup.Shapes}"
                    SelectionChanged="ShapeList_OnSelectionChanged"
                    SelectionMode="Extended">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="IsSelected" Value="{Binding Selected}" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Rectangle Width="48" Height="48">
                                    <Rectangle.Fill>
                                        <ImageBrush
                                            ImageSource="/Resources/Images/transparent.png"
                                            TileMode="Tile"
                                            Viewport="0,0,0.1,0.1"
                                            ViewportUnits="RelativeToBoundingBox" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Image
                                    Width="48"
                                    Height="48"
                                    Source="{Binding Preview}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>

            <!--  Bottom toolbar  -->
            <StackPanel
                Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Orientation="Horizontal">

                <!--  Colors  -->
                <xctk:ColorPicker
                    x:Name="ColorPicker"
                    Width="30"
                    DisplayColorAndName="False"
                    MouseRightButtonUp="ColorPicker_OnMouseRightButtonUp"
                    SelectedColor="{Binding SelectedColor}"
                    SelectedColorChanged="ColorPicker_SelectedColorChanged"
                    ShowAvailableColors="False"
                    ShowDropDownButton="False"
                    ShowRecentColors="True" />

                <ItemsControl
                    MaxWidth="256"
                    Margin="5,0"
                    ItemsSource="{Binding ColorSwatches}">
                    <ItemsControl.Resources>
                        <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    </ItemsControl.Resources>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Rectangle
                                Width="16"
                                Height="16"
                                Fill="{Binding ., Converter={StaticResource ColorToBrushConverter}}"
                                MouseLeftButtonUp="ColorSwatch_OnMouseLeftButtonUp"
                                MouseRightButtonUp="ColorSwatch_OnMouseRightButtonUp" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </Grid>

    </DockPanel>
</Window>
